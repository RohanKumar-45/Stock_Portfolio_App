{"ast":null,"code":"import axios from'axios';import{setLoading,setError,setStocks,setCurrentStock,addStock,updateStock,removeStock}from'./stockSlice';const API_URL='/api/stocks';export const fetchStocks=()=>async dispatch=>{try{dispatch(setLoading(true));const response=await axios.get(API_URL);dispatch(setStocks(response.data));}catch(error){var _error$response,_error$response$data;dispatch(setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Error fetching stocks'));}};export const fetchStockById=id=>async dispatch=>{try{dispatch(setLoading(true));const response=await axios.get(\"\".concat(API_URL,\"/\").concat(id));dispatch(setCurrentStock(response.data));}catch(error){var _error$response2,_error$response2$data;dispatch(setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Error fetching stock'));}};export const createStock=stockData=>async dispatch=>{try{dispatch(setLoading(true));const response=await axios.post(API_URL,stockData);dispatch(addStock(response.data));return response.data;}catch(error){var _error$response3,_error$response3$data;dispatch(setError(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Error creating stock'));throw error;}};export const updateStockById=(id,stockData)=>async dispatch=>{try{dispatch(setLoading(true));const response=await axios.put(\"\".concat(API_URL,\"/\").concat(id),stockData);dispatch(updateStock(response.data));return response.data;}catch(error){var _error$response4,_error$response4$data;dispatch(setError(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Error updating stock'));throw error;}};export const deleteStock=id=>async dispatch=>{try{dispatch(setLoading(true));await axios.delete(\"\".concat(API_URL,\"/\").concat(id));dispatch(removeStock(id));}catch(error){var _error$response5,_error$response5$data;dispatch(setError(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Error deleting stock'));throw error;}};","map":{"version":3,"names":["axios","setLoading","setError","setStocks","setCurrentStock","addStock","updateStock","removeStock","API_URL","fetchStocks","dispatch","response","get","data","error","_error$response","_error$response$data","message","fetchStockById","id","concat","_error$response2","_error$response2$data","createStock","stockData","post","_error$response3","_error$response3$data","updateStockById","put","_error$response4","_error$response4$data","deleteStock","delete","_error$response5","_error$response5$data"],"sources":["D:/Rohan/Sem 7/FST/Stock_Portfolio_App/frontend/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  setLoading,\r\n  setError,\r\n  setStocks,\r\n  setCurrentStock,\r\n  addStock,\r\n  updateStock,\r\n  removeStock\r\n} from './stockSlice';\r\n\r\nconst API_URL = '/api/stocks';\r\n\r\nexport const fetchStocks = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const response = await axios.get(API_URL);\r\n    dispatch(setStocks(response.data));\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error fetching stocks'));\r\n  }\r\n};\r\n\r\nexport const fetchStockById = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    dispatch(setCurrentStock(response.data));\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error fetching stock'));\r\n  }\r\n};\r\n\r\nexport const createStock = (stockData) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const response = await axios.post(API_URL, stockData);\r\n    dispatch(addStock(response.data));\r\n    return response.data;\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error creating stock'));\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateStockById = (id, stockData) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const response = await axios.put(`${API_URL}/${id}`, stockData);\r\n    dispatch(updateStock(response.data));\r\n    return response.data;\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error updating stock'));\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteStock = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    await axios.delete(`${API_URL}/${id}`);\r\n    dispatch(removeStock(id));\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error deleting stock'));\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OACEC,UAAU,CACVC,QAAQ,CACRC,SAAS,CACTC,eAAe,CACfC,QAAQ,CACRC,WAAW,CACXC,WAAW,KACN,cAAc,CAErB,KAAM,CAAAC,OAAO,CAAG,aAAa,CAE7B,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,KAAO,CAAAC,QAAQ,EAAK,CACnD,GAAI,CACFA,QAAQ,CAACT,UAAU,CAAC,IAAI,CAAC,CAAC,CAC1B,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAACJ,OAAO,CAAC,CACzCE,QAAQ,CAACP,SAAS,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAAC,CACpC,CAAE,MAAOC,KAAK,CAAE,KAAAC,eAAA,CAAAC,oBAAA,CACdN,QAAQ,CAACR,QAAQ,CAAC,EAAAa,eAAA,CAAAD,KAAK,CAACH,QAAQ,UAAAI,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBF,IAAI,UAAAG,oBAAA,iBAApBA,oBAAA,CAAsBC,OAAO,GAAI,uBAAuB,CAAC,CAAC,CAC9E,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAIC,EAAE,EAAK,KAAO,CAAAT,QAAQ,EAAK,CACxD,GAAI,CACFA,QAAQ,CAACT,UAAU,CAAC,IAAI,CAAC,CAAC,CAC1B,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,IAAAQ,MAAA,CAAIZ,OAAO,MAAAY,MAAA,CAAID,EAAE,CAAE,CAAC,CACpDT,QAAQ,CAACN,eAAe,CAACO,QAAQ,CAACE,IAAI,CAAC,CAAC,CAC1C,CAAE,MAAOC,KAAK,CAAE,KAAAO,gBAAA,CAAAC,qBAAA,CACdZ,QAAQ,CAACR,QAAQ,CAAC,EAAAmB,gBAAA,CAAAP,KAAK,CAACH,QAAQ,UAAAU,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBR,IAAI,UAAAS,qBAAA,iBAApBA,qBAAA,CAAsBL,OAAO,GAAI,sBAAsB,CAAC,CAAC,CAC7E,CACF,CAAC,CAED,MAAO,MAAM,CAAAM,WAAW,CAAIC,SAAS,EAAK,KAAO,CAAAd,QAAQ,EAAK,CAC5D,GAAI,CACFA,QAAQ,CAACT,UAAU,CAAC,IAAI,CAAC,CAAC,CAC1B,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACyB,IAAI,CAACjB,OAAO,CAAEgB,SAAS,CAAC,CACrDd,QAAQ,CAACL,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC,CACjC,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,KAAAY,gBAAA,CAAAC,qBAAA,CACdjB,QAAQ,CAACR,QAAQ,CAAC,EAAAwB,gBAAA,CAAAZ,KAAK,CAACH,QAAQ,UAAAe,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBb,IAAI,UAAAc,qBAAA,iBAApBA,qBAAA,CAAsBV,OAAO,GAAI,sBAAsB,CAAC,CAAC,CAC3E,KAAM,CAAAH,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAc,eAAe,CAAGA,CAACT,EAAE,CAAEK,SAAS,GAAK,KAAO,CAAAd,QAAQ,EAAK,CACpE,GAAI,CACFA,QAAQ,CAACT,UAAU,CAAC,IAAI,CAAC,CAAC,CAC1B,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAAC6B,GAAG,IAAAT,MAAA,CAAIZ,OAAO,MAAAY,MAAA,CAAID,EAAE,EAAIK,SAAS,CAAC,CAC/Dd,QAAQ,CAACJ,WAAW,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC,CACpC,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,KAAAgB,gBAAA,CAAAC,qBAAA,CACdrB,QAAQ,CAACR,QAAQ,CAAC,EAAA4B,gBAAA,CAAAhB,KAAK,CAACH,QAAQ,UAAAmB,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBjB,IAAI,UAAAkB,qBAAA,iBAApBA,qBAAA,CAAsBd,OAAO,GAAI,sBAAsB,CAAC,CAAC,CAC3E,KAAM,CAAAH,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAkB,WAAW,CAAIb,EAAE,EAAK,KAAO,CAAAT,QAAQ,EAAK,CACrD,GAAI,CACFA,QAAQ,CAACT,UAAU,CAAC,IAAI,CAAC,CAAC,CAC1B,KAAM,CAAAD,KAAK,CAACiC,MAAM,IAAAb,MAAA,CAAIZ,OAAO,MAAAY,MAAA,CAAID,EAAE,CAAE,CAAC,CACtCT,QAAQ,CAACH,WAAW,CAACY,EAAE,CAAC,CAAC,CAC3B,CAAE,MAAOL,KAAK,CAAE,KAAAoB,gBAAA,CAAAC,qBAAA,CACdzB,QAAQ,CAACR,QAAQ,CAAC,EAAAgC,gBAAA,CAAApB,KAAK,CAACH,QAAQ,UAAAuB,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBrB,IAAI,UAAAsB,qBAAA,iBAApBA,qBAAA,CAAsBlB,OAAO,GAAI,sBAAsB,CAAC,CAAC,CAC3E,KAAM,CAAAH,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}