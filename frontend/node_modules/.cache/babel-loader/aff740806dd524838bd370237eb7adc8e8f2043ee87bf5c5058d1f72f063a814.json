{"ast":null,"code":"import axios from 'axios';\nimport { setLoading, setError, setStocks, setCurrentStock, addStock, updateStock, removeStock } from './stockSlice';\nconst API_URL = '/api/stocks';\nexport const fetchStocks = () => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    const response = await axios.get(API_URL);\n    dispatch(setStocks(response.data));\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch(setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error fetching stocks'));\n  }\n};\nexport const fetchStockById = id => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    const response = await axios.get(`${API_URL}/${id}`);\n    dispatch(setCurrentStock(response.data));\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    dispatch(setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Error fetching stock'));\n  }\n};\nexport const createStock = stockData => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    const response = await axios.post(API_URL, stockData);\n    dispatch(addStock(response.data));\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    dispatch(setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Error creating stock'));\n    throw error;\n  }\n};\nexport const updateStockById = (id, stockData) => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    const response = await axios.put(`${API_URL}/${id}`, stockData);\n    dispatch(updateStock(response.data));\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    dispatch(setError(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Error updating stock'));\n    throw error;\n  }\n};\nexport const deleteStock = id => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    await axios.delete(`${API_URL}/${id}`);\n    dispatch(removeStock(id));\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    dispatch(setError(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Error deleting stock'));\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","setLoading","setError","setStocks","setCurrentStock","addStock","updateStock","removeStock","API_URL","fetchStocks","dispatch","response","get","data","error","_error$response","_error$response$data","message","fetchStockById","id","_error$response2","_error$response2$data","createStock","stockData","post","_error$response3","_error$response3$data","updateStockById","put","_error$response4","_error$response4$data","deleteStock","delete","_error$response5","_error$response5$data"],"sources":["D:/Rohan/Sem 7/FST/Stock_Portfolio_App/frontend/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  setLoading,\r\n  setError,\r\n  setStocks,\r\n  setCurrentStock,\r\n  addStock,\r\n  updateStock,\r\n  removeStock\r\n} from './stockSlice';\r\n\r\nconst API_URL = '/api/stocks';\r\n\r\nexport const fetchStocks = () => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const response = await axios.get(API_URL);\r\n    dispatch(setStocks(response.data));\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error fetching stocks'));\r\n  }\r\n};\r\n\r\nexport const fetchStockById = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    dispatch(setCurrentStock(response.data));\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error fetching stock'));\r\n  }\r\n};\r\n\r\nexport const createStock = (stockData) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const response = await axios.post(API_URL, stockData);\r\n    dispatch(addStock(response.data));\r\n    return response.data;\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error creating stock'));\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateStockById = (id, stockData) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    const response = await axios.put(`${API_URL}/${id}`, stockData);\r\n    dispatch(updateStock(response.data));\r\n    return response.data;\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error updating stock'));\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteStock = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch(setLoading(true));\r\n    await axios.delete(`${API_URL}/${id}`);\r\n    dispatch(removeStock(id));\r\n  } catch (error) {\r\n    dispatch(setError(error.response?.data?.message || 'Error deleting stock'));\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}